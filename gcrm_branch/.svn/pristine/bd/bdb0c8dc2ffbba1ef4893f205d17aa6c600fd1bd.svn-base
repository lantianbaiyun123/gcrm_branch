!function(r,n){"use strict";function o(){l.addClass(b)}function e(){l.removeClass(b)}function t(){e(),l.addClass(p)}function a(r){return c(r)&&d(r.then)}function i(r){if(!c(r))throw new Error("Bootstrap configuration must be an object.");if(!m(r.module))throw new Error("'config.module' must be a string.");if(!c(r.resolve))throw new Error("'config.resolve' must be an object.");if(angular.isDefined(r.onError)&&!d(r.onError))throw new Error("'config.onError' must be a function.")}function u(r){return m(r)?angular.injector(["ng",r]):g(r)&&1===r.length&&"ng"===r[0]?h:(r.unshift("ng"),angular.injector(r))}function s(r,o){var t=v.defer();return angular.element(n).ready(function(){angular.bootstrap(r,[o]),e(),t.resolve(!0)}),t.promise}function f(r){function e(r,n){var o;if(y.push(n),!d(r)&&!g(r))throw new Error("Resolve for '"+n+"' is not a valid dependency injection format.");if(o=m.instantiate(r),!a(o))throw new Error("Resolve function for '"+n+"' must return a promise.");j.push(o)}function f(r){return w(r,function(r,n){var o=r&&r.data?r.data:r;angular.module(p).constant(y[n],o)}),s(b,p)}function c(r){t(),d(h.onError)&&h.onError(r)}var m,h=r||{},b=h.element,p=h.module,E=h.injectorModules||[],j=[],y=[];return l=angular.element(n.body),o(),i(h),m=u(E),w(h.resolve,e),v.all(j).then(f,c)}var l,c=angular.isObject,d=angular.isFunction,g=angular.isArray,m=angular.isString,w=angular.forEach,h=angular.injector(["ng"]),v=h.get("$q"),b="deferred-bootstrap-loading",p="deferred-bootstrap-error";r.deferredBootstrapper={bootstrap:f}}(window,document);